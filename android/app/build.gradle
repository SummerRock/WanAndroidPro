plugins {
    id 'com.android.application'
    // id 'com.archinamon.aspectj'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.facebook.react'
}
apply from: this.project.file('../config.gradle')

android { // 配置 android gradle plugin 需要的内容
    compileSdkVersion this.project.ext.compileSdkVersion

    defaultConfig { // 版本，applicationId 等配置
        applicationId "com.example.myapplication"
        minSdkVersion this.project.ext.minSdkVersion
        targetSdkVersion this.project.ext.targetSdkVersion
        versionCode 1
        versionName "1.2"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (project.hasProperty("MYAPP_RELEASE_STORE_FILE")) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
            universalApk false
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            // 开启源代码混淆
            minifyEnabled false
            // 启用资源压缩
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        profile {
            initWith debug
        }

        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    viewBinding {
        enabled true
    }
    namespace 'com.example.myapplication'

    String storageUrl = System.env.FLUTTER_STORAGE_BASE_URL ?: "https://storage.googleapis.com"
    repositories {
        maven {
            url '../flutter_module/build/host/outputs/repo'
            // /Users/apple/workplace/my_own/WanAndroidPro/android/flutter_module/build/host/outputs/repo
        }
        maven {
            url "$storageUrl/download.flutter.io"
        }
    }
}

dependencies { // 项目需要的依赖
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:$this.project.ext.appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$this.project.ext.constraintlayout"
    implementation "com.google.android.material:material:$this.project.ext.material"
    implementation "androidx.vectordrawable:vectordrawable:$this.project.ext.vectordrawable"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment:2.5.2'
    implementation 'androidx.navigation:navigation-ui:2.5.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.databinding:databinding-runtime:8.0.1'
    // For developers using AndroidX in their applications
    implementation 'me.drakeet.multitype:multitype:3.4.4'
    implementation 'com.github.smarteist:autoimageslider:1.4.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation "pub.devrel:easypermissions:$this.project.ext.easypermissions"
    implementation "org.greenrobot:eventbus:$this.project.ext.eventbus"
    implementation "com.squareup.retrofit2:retrofit:$this.project.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$this.project.ext.retrofitVersion" // 如果需要使用 Gson 进行数据转换
    implementation "com.tencent:mmkv:$this.project.ext.mmkv"
    implementation "androidx.preference:preference:$this.project.ext.preference"

    implementation "com.alibaba:arouter-api:$this.project.ext.aRouter" // 请替换为最新版本号
    kapt "com.alibaba:arouter-compiler:$this.project.ext.aRouter" // 请替换为最新版本号

    testImplementation "junit:junit:$this.project.ext.junit"
    androidTestImplementation "androidx.test.ext:junit:$this.project.ext.ext_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$this.project.ext.espresso_core"
    //依赖本地library
    implementation project(path: ':commonmodule')
    implementation project(path: ':monitor')
    implementation project(path: ':react')
//    implementation project(':flutter')
    debugImplementation 'com.example.play.flutter_module:flutter_debug:1.0'
    profileImplementation 'com.example.play.flutter_module:flutter_profile:1.0'
    releaseImplementation 'com.example.play.flutter_module:flutter_release:1.0'

    /** 上拉刷新、下拉加载 **/
    implementation('com.scwang.smartrefresh:SmartRefreshLayout:1.1.0')

    implementation "com.facebook.react:react-android"
    implementation "com.facebook.react:hermes-android"
}